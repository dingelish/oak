cargo-features = ["trim-paths"]

[workspace]
resolver = "2"
members = [
  "micro_rpc",
  "micro_rpc_build",
  "oak_attestation",
  "oak_attestation_explain",
  "oak_attestation_explain_wasm",
  "oak_attestation_types",
  "oak_attestation_verification",
  "oak_attestation_verification_types",
  "oak_channel",
  "oak_client",
  "oak_client/tonic",
  "oak_containers/agent",
  "oak_containers/examples/hello_world/web_client",
  "oak_containers/channel",
  "oak_containers/launcher",
  "oak_containers/orchestrator",
  "oak_containers/attestation",
  "oak_containers/syslogd",
  "oak_core",
  "oak_crypto",
  "oak_dice",
  "oak_enclave_runtime_support",
  "oak_file_utils",
  "oak_functions/examples/echo/module",
  "oak_functions/examples/invalid_module/module",
  "oak_functions/examples/key_value_lookup/module",
  "oak_functions/lookup_data_generator",
  "oak_functions_abi",
  "oak_functions_client",
  "oak_functions_sdk",
  "oak_functions_sdk/tests/lookup_module",
  "oak_functions_sdk/tests/testing_module",
  "oak_functions_service",
  "oak_functions_test_utils",
  "oak_linux_boot_params",
  "oak_proto_rust",
  "oak_proto_rust/grpc",
  "oak_proto_rust/micro_rpc",
  "oak_restricted_kernel",
  "oak_restricted_kernel_dice",
  "oak_restricted_kernel_interface",
  "oak_restricted_kernel_sdk",
  "oak_session",
  "oak_session_wasm",
  "oak_sev_guest",
  "oak_sev_snp_attestation_report",
  "oak_simple_io",
  "stage0",
  "sev_serial",
  "stage0_dice",
  "oak_restricted_kernel_sdk_proc_macro",
  "oak_virtio",
]
exclude = [
  "enclave_applications",
  "micro_rpc_workspace_test",
  "stage0_bin",
  "stage0_bin_tdx",
  "stage0_sev",
  "testing/oak_echo_app",
  "testing/oak_echo_raw_app",
  "testing/sev_snp_hello_world_kernel",
  "third_party/rust-hypervisor-firmware-virtio",
]

[profile.release]
strip = "debuginfo" # Debug info is not always deterministic.
trim-paths = "all"  # Remove path prefixes outside the workspace root.

# Special version of release that enables more aggressive optimizations.
# See https://doc.rust-lang.org/cargo/reference/profiles.html for more details.
[profile.release-lto]
inherits = "release"
# Limited debug info. Note that for this flag, `1` != `true`.
debug = 1
lto = true
panic = "abort"
codegen-units = 1

[workspace.dependencies]
# Declare workspace-wide dependencies so that they don't need to use relative paths to refer to each other, and they are always kept in sync.
# Local crates.
benchmark = { path = "./oak_functions/examples/benchmark/module" }
micro_rpc = { path = "./micro_rpc" }
micro_rpc_build = { path = "./micro_rpc_build" }
oak_attestation = { path = "./oak_attestation" }
oak_attestation_explain = { path = "./oak_attestation_explain" }
oak_attestation_types = { path = "./oak_attestation_types" }
oak_attestation_verification = { path = "./oak_attestation_verification" }
oak_attestation_verification_types = { path = "./oak_attestation_verification_types" }
oak_channel = { path = "./oak_channel" }
oak_client = { path = "./oak_client" }
oak_client_tonic = { path = "./oak_client/tonic" }
oak_containers_agent = { path = "./oak_containers/agent" }
oak_containers_orchestrator = { path = "./oak_containers/orchestrator" }
oak_containers_attestation = { path = "./oak_containers/attestation" }
oak_containers_channel = { path = "./oak_containers/channel" }
oak_containers_launcher = { path = "./oak_containers/launcher" }
oak_core = { path = "./oak_core" }
oak_crypto = { path = "./oak_crypto" }
oak_dice = { path = "./oak_dice" }
oak_enclave_runtime_support = { path = "./oak_enclave_runtime_support", default-features = false }
oak_file_utils = { path = "./oak_file_utils" }
oak_functions_abi = { path = "./oak_functions_abi" }
oak_functions_client = { path = "./oak_functions_client" }
oak_functions_lookup = { path = "./oak_functions/lookup" }
oak_functions_sdk = { path = "./oak_functions_sdk" }
oak_functions_service = { path = "./oak_functions_service", default-features = false }
oak_functions_test_utils = { path = "./oak_functions_test_utils" }
oak_functions_wasm = { path = "./oak_functions/wasm" }
oak_grpc_utils = { path = "./oak_grpc_utils" }
oak_grpc = { path = "./oak_proto_rust/grpc" }
oak_linux_boot_params = { path = "./oak_linux_boot_params" }
oak_logger = { path = "./oak_functions/logger" }
oak_micro_rpc = { path = "./oak_proto_rust/micro_rpc" }
oak_proto_rust = { path = "./oak_proto_rust" }
oak_restricted_kernel = { path = "./oak_restricted_kernel" }
oak_restricted_kernel_dice = { path = "./oak_restricted_kernel_dice" }
oak_restricted_kernel_sdk = { path = "./oak_restricted_kernel_sdk" }
oak_restricted_kernel_sdk_proc_macro = { path = "./oak_restricted_kernel_sdk_proc_macro" }
oak_restricted_kernel_interface = { path = "./oak_restricted_kernel_interface" }
oak_session = { path = "./oak_session" }
oak_stage0 = { path = "./stage0" }
oak_sev_guest = { path = "./oak_sev_guest" }
oak_sev_snp_attestation_report = { path = "./oak_sev_snp_attestation_report" }
oak_simple_io = { path = "./oak_simple_io" }
oak_stage0_dice = { path = "./stage0_dice" }
oak_virtio = { path = "./oak_virtio" }
sev_serial = { path = "./sev_serial" }
# Common external crates.
prost = { version = "*", default-features = false, features = ["prost-derive"] }
prost-build = "*"
prost-types = "*"
tokio = "*"
tonic = "*"
tonic-build = { version = "*", default-features = false }

[patch.crates-io]
tokio-vsock = { git = "https://github.com/rust-vsock/tokio-vsock", rev = "2a52faeb4ede7d9712adbc096e547ab7ea766f4b" }
